name: IOS Production Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: [main]
#   workflow_dispatch:
#   release:
#     types: [published] # only run the workflow when a new release has been published

jobs:
  create-environment-file:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.set-env-file.outputs }}
    steps:
      - name: Create Environment File
        id: set-env-file
        run: |
          echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV
          echo "ANOTHER_VARIABLE=some_value" >> $GITHUB_ENV

  ios-build:
    name: IOS Production Build
    runs-on: macOS-latest
    # defaults:
    #   run:
    #     working-directory: ios

    env:
      YARN_CACHE_DIR: ${{ needs.create-environment-file.outputs.env }}
      ANOTHER_VARIABLE: ${{ needs.create-environment-file.outputs.env }}

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ needs.create-environment-file.outputs.env }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
        env:
          YARN_CACHE_DIR: ${{ needs.create-environment-file.outputs.env }}

      # - replacing this deprecated set-output with above step
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Restore node_modules from cache
      #   uses: actions/cache@v2
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Restore Pods cache
        uses: actions/cache@v2
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        run: pod install --repo-update && cd ..

      - name: Test
        run: yarn test

      - name: Install pm2
        run: npm install pm2 -g

      - name: Start Metro bundler
        run: pm2 start "npx react-native run-ios" --name start-metro

      # - name: Build iOS
      #   run: yarn react-native run-ios

    #   - name: Build IOS App
    #     uses: yukiarrr/ios-build-action@v1.4.0
    #     with:
    #       project-path: ios/MyApp.xcodeproj
    #       p12-base64: ${{ secrets.IOS_P12_BASE64 }}
    #       mobileprovision-base64: ${{ secrets.IOS_MOBILE_PROVISION_BASE64 }}
    #       code-signing-identity: 'iPhone Distribution'
    #       team-id: ${{ secrets.IOS_TEAM_ID }}
    #       certificate-password: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
    #       workspace-path: ios/MyApp.xcworkspace
    #       scheme: MyApp

    #   - name: 'Upload app to TestFlight'
    #     uses: apple-actions/upload-testflight-build@v1
    #     with:
    #       app-path: 'output.ipa'
    #       issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
    #       api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
    #       api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
